@model AllReady.Areas.Admin.Models.CampaignSummaryModel
@inject AllReady.Services.ISelectListService SelectListService

@{
    var isEdit = Model != null && Model.Id > 0;
    string actionTitle;
    string cancelUrl;
    if (isEdit)
    {
        ViewData["Title"] = $"Edit Campaign";
        actionTitle = "Save";
        cancelUrl = Url.Action("Details", "Campaign", new { area = "Admin", id = Model.Id });
    }
    else
    {
        ViewData["Title"] = "Create Campaign";
        actionTitle = "Create";
        cancelUrl = Url.Action("Index", "Campaign", new { area = "Admin" });
    }
}
<div class="row">
    <div class="col-12">
        <ol class="breadcrumb">
            <li><a asp-controller="Campaign" asp-action="Index" asp-route-area="Admin">Campaigns</a></li>
            @if (isEdit)
            {
                <li><a href="@cancelUrl">@Model.Name</a></li>
                <li>Edit</li>
            }
            else
            {
                <li>Create New Campaign</li>
            }

        </ol>
    </div>
</div>

<h2>@ViewData["Title"]</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (isEdit)
        {
            Html.HiddenFor(model => model.Id);
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" asp-for="Description" class="form-control" />
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2">
                @Html.LabelFor(model => model.FullDescription)
                <p><cite>This formatted text will be used as your landing page content</cite></p>
            </div>
            <div class="col-md-10">
                <textarea asp-for="FullDescription" class="form-control wysiwyg" rows="6"></textarea>
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TenantId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TenantId, SelectListService.GetTenants(), htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-12">
            <button type="submit" value="@actionTitle" class="btn">@actionTitle</button>
            <a href="@cancelUrl" class="btn">Cancel</a>
        </div>
    </div>
}

@if (isEdit)
{
    <h2>Image</h2>
    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="@Model.ImageUrl" class="img-thumbnail img-responsive col-md-4" />
                <form action="~/Admin/Campaign/PostCampaignFile" method="post" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="campaignId" value="@Model.Id" />
                    <div class="form-group">
                        <div class="col-md-10">
                            <input type="file" name="file" id="newFile" class="control-label col-md-4" />
                            <button type="submit" class="btn col-md-1">Upload</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
}
